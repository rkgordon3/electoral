<div class="center hero-unit" >

<div class='span12' >
  <div class="row">
    <div class='span3' id="jCalTarget" ></div>
    <div  class='span9' >
      <div class='row'>
        <div id="us-map" class='span8' style="width:600px;height: 400px"></div>
        <div class='span1' style="position:relative; top:330px;left:-250px">
          <i class='icon-retweet' onclick="recolor(this);" ></i>
          <span style="font-size:8px"  id='popular_vote_scheme'>Color by Popular Vote</span>
          <span style="font-size:8px"  id='electoral_vote_scheme' >Color by Electoral Vote</span>
        </div>
      </div>
      
      <div class='row'>
        <div class='span6' >
          <%= vote_table_tag(session[:game], Candidate.all) %>
        </div>
      </div>
      <div class='row'>
         <div class="span1">
           <%= roll_tag(session[:game]) %>
         </div>
      </div>
    </div>
  </div>
</div>



  <script>
   function recolor_handler(data){
      var mapObject = $('#us-map').vectorMap('get', 'mapObject');
      $(colorScheme).show();
      if (colorScheme == '#electoral_vote_scheme' ) {
       // toggle to popular
      red_states = jvm.values.apply({}, jvm.values(data.percent_differential.red_states));
      blue_states = jvm.values.apply({}, jvm.values(data.percent_differential.blue_states));

       
  
        mapObject.series.regions[0].setScale(['#f4e6e6', '#f72a2a']);
        mapObject.series.regions[0].setValues(data.percent_differential.red_states);
         mapObject.series.regions[1].setScale(
          ['#DEEBF7', '#08519C']);
        mapObject.series.regions[1].setValues(data.percent_differential.blue_states);
       
        colorScheme = '#popular_vote_scheme';
      } else {
         mapObject.series.regions[0].setScale(['#DEEBF7', '#08519C']);
        mapObject.series.regions[0].setValues(data.electoral_votes);
        mapObject.series.regions[1].setValues([]);
        colorScheme = '#electoral_vote_scheme';
      }
      $(colorScheme).hide();


    };

   var colorScheme = '#electoral_vote_scheme';
  function recolor(element) { 

    $.getJSON(<%= "\'#{maps_show_path}\'" %>, recolor_handler);

  };

$('#jCalTarget').jCal({
	day:			new Date(<%= election_year %>, 8,1),
	days:			1,
	showMonths:		<%= election_cycle %>,
	monthSelect:		false,
  scrollable:          false, 
	callback:		function (day, days) {
		// This is selected element, that is, a 'day' div 
			elem =$("#c" +$('.jCalMo').length + "d_" + (day.getMonth()+1) + "_" + day.getDate() + "_"+day.getFullYear());
		}
	});


    //$(function(){
    //  $('#us-map').vectorMap({map: 'us_aea_en'});
    //});

  $(function(){
  $.getJSON(<%= "\'#{maps_show_path}\'" %>, 
    function(data){
      var year = 2008;
        $('#electoral_vote_scheme').hide()

        statesValues = jvm.values.apply({}, jvm.values(data.electoral_votes)),
        metroPopValues = Array.prototype.concat.apply([], jvm.values(data.metro.population)),
        metroUnemplValues = Array.prototype.concat.apply([], jvm.values(data.metro.unemployment));
       

    $('#us-map').vectorMap({
      map: 'us_aea_en',
      backgroundColor: '#707070',
      series: {
       
        regions: [{
          scale: ['#DEEBF7', '#08519C'],
          attribute: 'fill',
          values: data.electoral_votes,
          min: jvm.min(statesValues),
          max: jvm.max(statesValues)
        },
        {
          scale: ['#DEEBF7', '#08519C'],
          attribute: 'fill',
          values: [],
          min: jvm.min(statesValues),
          max: jvm.max(statesValues)
        }]
      },
      onMarkerLabelShow: function(event, label, index){
        label.html(
          ''+data.metro.names[index]+'<br/>'+
          'Population: '+data.metro.population[year][index]+'<br/>'+
          'Unemployment rate: '+data.metro.unemployment[year][index]
        );
      },
      onRegionLabelShow: function(event, label, state_code){
        vps = data.voting_profiles[state_code];
        str = "";

       for (i = 0; i  < vps.length; i++) {
         str += vps[i].name + ": " + vps[i].votes + "<br/>";
       }
       
        label.html(
          ''+label.html()+'<br/>'+
          'Electoral Votes: '+data.electoral_votes[state_code] + "<br/>" 
           + str
        );
      }
    });

    var mapObject = $('#us-map').vectorMap('get', 'mapObject');
    /*
    $("#slider").slider({
      value: year,
      min: 2005,
      max: 2009,
      step: 1,
      slide: function( event, ui ) {
        year = ui.value;
        mapObject.series.regions[0].setValues(data.states[ui.value]);
        mapObject.series.markers[0].setValues(data.metro.unemployment[ui.value]);
        mapObject.series.markers[1].setValues(data.metro.population[ui.value]);
      }
    });

    */
    $(function() {
        $.getJSON(<%= "\'#{events_path}\'" %>, 
            function(data) { 
             
              for (i = 0; i < data.length; i++) {
                dateId = '#c3d_' + data[i].month + '_' + data[i].date + '_' + data[i].year;
                //alert($(dateId));
                $(dateId).addClass('eventDate'); 
              }
        });
      });
   
  });
});




    </script>
